#!/usr/bin/php
<?

/**
 * Script to reset the database and reinstall the current moodle/totara
 * based on the current working directory when called
 */

require_once(dirname(__DIR__).'/utils/utilslib.php');
$scriptname = basename(__FILE__);

$cwd = getcwd();
try {
    $dirroot = get_web_root($cwd);
} catch (Exception $e) {
    echo "Unable to determine webroot for current location '{$cwd}'.\n";
    exit;
}

if (!is_writeable($dirroot)) {
    echo "Webroot '{$dirroot}' is not writeable. Exiting\n";
    exit;
}

$configfile = $dirroot . '/config.php';
if (file_exists($configfile) && !is_writeable($configfile)) {
    echo "Config file '{$configfile}' is not writeable. Exiting\n";
    exit;
}

$instance = basename($dirroot);
$settings = get_instance_settings($instance);
$dataroot = $settings->dataroot;

if (!is_writeable($dataroot)) {
    echo "Site dataroot '{$dataroot}' is not writeable. Exiting\n";
    exit;
}

$dbname = 'fresh' . $instance;
$dbtype = 'pgsql';

// Remove old config
if (file_exists($configfile)) {
    echo "Removing old config.php\n";
    unlink($configfile);
}

echo "Dropping any existing {$dbtype} database called '{$dbname}'\n";
// drop and recreate database
$db = mydb::connect($dbtype, $settings->dbhost, $settings->dbuser, $settings->dbpass);
$db->dropdb($dbname);
echo "Creating new {$dbtype} database '{$dbname}'\n";
$db->createdb($dbname);

// empty moodledata folder
echo "Emptying dataroot '{$dataroot}'\n";
delete_directory_contents($dataroot);

// run CLI install
// todo figure out warnings on 1.1
echo "Starting CLI install in '{$dirroot}'\n";
cli_install($dbtype, $dbname, $dirroot);

// Remove config again and recreate with all settings
// this also fixes the permissions so it's readable by the web server
if (file_exists($configfile)) {
    echo "Removing config.php created during install\n";
    unlink($configfile);
}
// recreate config.php
echo "Recreating config.php with sensible default settings\n";
$versioninfo = get_site_version();
$version = isset($versioninfo->totara->version) ?
    $versioninfo->totara->version : $versioninfo->moodle->version;
$configtemplate = get_best_config($version);
$dbsettings = get_database_settings($dbtype, $dbname, $version);
$settings = merge_objects($settings, $dbsettings);
$settings->dirroot = $dirroot;
$config = substitute_template_config($configtemplate, $settings);
file_put_contents($configfile, $config);

// Update password hashes
// We need this because the CLI install may have created them with a salt
echo "Update password hashes to remove any salt\n";
$db = mydb::connect($dbtype, $settings->dbhost, $settings->dbuser, $settings->dbpass, $dbname);
$db->query("UPDATE {$settings->prefix}user SET password=md5('{$settings->adminpass}') WHERE username='admin'");
$db->query("UPDATE {$settings->prefix}user SET password=md5('guest') WHERE username='guest'");

// Set admin email/city/country
echo "Set required profile fields for admin user\n";
$db->query("
    UPDATE {$settings->prefix}user
    SET city='{$settings->defaultcity}',
    country='{$settings->defaultcountry}',
    email='{$settings->adminemail}'
    WHERE username='admin'");

// Init phpunit in the background
echo "Starting phpunit init via background process\n";
$descriptorspec = array(
    array('pipe', 'r'),               // stdin
    array('file', '/dev/null', 'a'), // stdout
    array('pipe', 'w'),               // stderr
);
$proc = proc_open('php admin/tool/phpunit/cli/init.php &', $descriptorspec, $pipes);

echo "Done\n";
