#!/usr/bin/php
<?

/**
 * Script to load the database/dataroot from a stored copy
 * created using savedb.
 * The database to restore to is determined based on values from the
 * config.php file found using get_web_root()
 */

require_once(dirname(__DIR__).'/utils/utilslib.php');
$scriptname = basename(__FILE__);
$backupdir = get_backup_directory();
$dbbackupdir = $backupdir . '/dbs';
$databackupdir = $backupdir . '/data';

// Unique name of backup to restore.
$name = isset($argv[1]) ? $argv[1] : 'default';

$cwd = getcwd();
try {
    $dirroot = get_web_root($cwd);
} catch (Exception $e) {
    echo "Unable to determine webroot for current location '{$cwd}'. Exiting.\n";
    exit;
}

$configfile = $dirroot . '/config.php';
if (file_exists($configfile) && !is_readable($configfile)) {
    echo "Config file '{$configfile}' is not readable. You may need to use setconf first. Exiting.\n";
    exit;
}

$settings = get_settings_from_config($configfile);

$dbname = $settings->dbname;
$dbtype = normalise_dbtype($settings->dbtype);
$dataroot = $settings->dataroot;

if (!is_readable($dataroot)) {
    echo "Site dataroot '{$dataroot}' is not readable. Exiting.\n";
    exit;
}

if (!is_readable($dbbackupdir)) {
    echo "Could not access DB backup directory path '{$dbbackupdir}'. Exiting.\n";
    exit;
}

if (!is_readable($databackupdir)) {
    echo "Could not access data backup directory path '{$databackupdir}'. Exiting.\n";
    exit;
}

$dbfilename = $dbbackupdir . '/' . $name . '.' . $dbtype;

if (!is_readable($dbfilename)) {
    echo "Could not access DB backup file '{$dbfilename}'. Exiting.\n";
    exit;
}

$datafilename = $databackupdir . '/' . $name . '.zip';

if (!is_readable($datafilename)) {
    echo "Could not access data file '{$datafilename}'. Exiting.\n";
    exit;
}

echo "Restoring backup from '{$dbfilename}' to {$dbtype} database '{$dbname}'.\n";
$db = mydb::connect($dbtype, $settings->dbhost, $settings->dbuser, $settings->dbpass);

if (!$db->restoredb($dbname, $dbfilename)) {
    echo "Error, file '{$dbfilename}' could not be restored to {$dbtype} database called '{$dbname}'. Exiting.\n";
    exit;
}

echo "Restoring moodledata from '{$datafilename}' to {$dataroot}\n";

// To be safe, let's just unzip on top of existing data.
// We may need to clear out data if this causes problems, but be careful
// with escaping if that is the case!
$command = "cd {$dataroot} && unzip -u {$datafilename} && cd -";
exec($command, $output, $returncode);

// 0 means success.
if ($returncode !== 0) {
    echo "Error, unzipping file '{$datafilename}' to '{$dataroot}'. Exiting.\n";
    exit;
}

echo "Done\n";

